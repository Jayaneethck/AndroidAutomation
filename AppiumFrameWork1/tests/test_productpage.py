import unittest
import allure

from appium import webdriver
import pytest
from time import sleep
import logging
import random

from appium.webdriver.common.appiumby import AppiumBy

from AppiumFrameWork1.pages.LoginPage import LoginPage

logging.basicConfig(filename='dukaanandroidautomation.log', filemode='w')

product_names = ['Sauce', 'Sausage', 'Fire Extinguisher', 'Bagpack', 'Powder', 'Umbrella', 'Iphone', 'Charger']
category_names = ['Electronics', 'Household', 'Mobile Accessories', 'Food Items', 'Healthcare', 'Medical',
                  'Packed Foods', 'Skin Care', 'Mobile Phones', 'Clothing', 'Furniture', 'Beverage']
custom_color_codes = ['#FFFFFF', '#000000', "#FF0000", '#00FF00', '#0000FF', '#800080']


class ProductsPage(unittest.TestCase):

    def setUp(self):
        self.driver = webdriver.Remote(command_executor="http://127.0.0.1:4723/wd/hub",
                                       desired_capabilities=
                                       {
                                           "platformName": "Android",
                                           "platformVersion": "9",
                                           "deviceName": "emulator-5554",
                                           "automationName": "uiautomator2",
                                           "app": "C:/Users/clinton/Downloads/app-prod-debug.apk",
                                           "newCommandTimeout": 600,
                                           "adbExecTimeout": "30000",
                                           "autoGrantPermissions": "true"

                                       })

    def test_add_products(self):
        random_name = (random.choice(product_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                      'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(1)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys(random_name)
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(2)
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(2)
        self.driver.swipe(480, 1560, 491, 1049, 400)
        choose_category = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                   'new UiSelector().className("android.widget.TextView").text("Furniture")')
        choose_category.click()
        sleep(1)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("1000")
        discounted_price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/sellingPriceET")
        discounted_price_textbox.send_keys("900")
        add_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton")
        add_button.click()
        sleep(5)
        back_button = self.driver.find_element(AppiumBy.XPATH,
                                               "//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        search_textbox.send_keys(random_name)
        sleep(3)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("In stock")')

    def test_delete_product(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(3)
        add_product_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                      'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(1)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys("Product to be deleted")
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(3)
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(1)
        choose_category = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                   'new UiSelector().className("android.widget.TextView").text("Furniture")')
        choose_category.click()
        sleep(1)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("1000")
        add_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton")
        add_button.click()
        sleep(3)
        back_button = self.driver.find_element(AppiumBy.XPATH,
                                               "//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        sleep(1)
        search_textbox.send_keys("Product to be deleted")
        sleep(2)
        product_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                  'new UiSelector().className("android.widget.TextView").text("Product to be deleted")')
        product_select.click()
        sleep(2)
        self.driver.swipe(500, 1550, 500, 250, 500)
        sleep(1)
        delete_product_in_product_details = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/tvDeleteProduct")
        delete_product_in_product_details.click()
        sleep(2)
        confirm_delete = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/consentActionTV")
        confirm_delete.click()
        sleep(2)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Delete this product")')

    def test_add_new_category(self):
        random_category_name = (random.choice(category_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        categories_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                     'new UiSelector().className("android.widget.TextView").text("Categories")')
        categories_select.click()
        sleep(2)
        add_categories_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                         'new UiSelector().className("android.widget.TextView").text("Add new category")')
        add_categories_button.click()
        sleep(2)
        categories_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/name_et")
        categories_textbox.send_keys(random_category_name)
        sleep(3)
        create_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        create_button.click()
        sleep(4)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        search_textbox.send_keys(random_category_name)
        sleep(3)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("In stock")')

    def test_search_product(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(2)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        sleep(3)
        search_textbox.send_keys("Sausage")
        sleep(5)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Sausage")')

    def test_product_stock_toggle(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(2)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        sleep(2)
        search_textbox.send_keys("Sausage")
        sleep(2)
        toggle_button_on = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                    'new UiSelector().className("android.widget.Switch").text("ON")')
        toggle_button_on.click()
        sleep(1)
        hide_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                               'new UiSelector().className("android.widget.TextView").text("Hide")')
        hide_button.click()
        sleep(1)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Continue")')
        sleep(5)
        toggle_button_on.click()
        sleep(2)
        out_of_stock_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                       'new UiSelector().className("android.widget.TextView").text("Out of stock")')
        out_of_stock_button.click()
        sleep(1)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Sauce is set out of stock")')

    def test_category_search(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        categories_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                     'new UiSelector().className("android.widget.TextView").text("Categories")')

        categories_select.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(2)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        sleep(1)
        search_textbox.send_keys("Electronics")
        sleep(5)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Electronics")')

    def test_edit_product(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(2)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        sleep(3)
        search_textbox.send_keys("Sausage")
        sleep(3)
        menu_icon = self.driver.find_element(AppiumBy.XPATH, "(//android.widget.ImageView[@content-desc='Small Icon'])[4]")
        menu_icon.click()
        sleep(2)
        edit_option = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/editProductTV")
        edit_option.click()
        sleep(3)
        category_select = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        category_select.click()
        sleep(2)
        category = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                            'new UiSelector().className("android.widget.TextView").text("Electronics")')
        category.click()
        sleep(1)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(2)
        update_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton")
        update_button.click()
        sleep(1)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Product details updated")')

    def test_add_product_with_multiple_categories(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                      'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(1)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys("Multi category product")
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(2)
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(10)
        first_category_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                         'new UiSelector().className("android.widget.TextView").text("sauce")')
        first_category_select.click()
        second_category_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                          'new UiSelector().className("android.widget.TextView").text("Healthcare")')
        second_category_select.click()
        third_category_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                         'new UiSelector().className("android.widget.TextView").text("Electronics")')
        third_category_select.click()
        sleep(1)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("1000")
        discounted_price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/sellingPriceET")
        discounted_price_textbox.send_keys("900")
        add_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton")
        add_button.click()
        sleep(4)
        back_button = self.driver.find_element(AppiumBy.XPATH, "//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(2)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        search_textbox.send_keys("Multi category product")
        sleep(2)
        product_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                  'new UiSelector().className("android.widget.TextView").text("In stock")')
        product_select.click()
        sleep(2)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.EditText").text("Multi category product")')

    def test_product_add_without_categories(self):
        random_product_name = (random.choice(product_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                      'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(1)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys(random_product_name)
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(2)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("5000")
        discounted_price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/sellingPriceET")
        discounted_price_textbox.send_keys("4650")
        sleep(2)
        self.assertEqual(self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton").is_displayed(),
                         True)

    def test_product_add_without_price(self):
        random_product_name = (random.choice(product_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(1)
        add_product_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                      'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(2)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys(random_product_name)
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(1)
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(1)
        category_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                   'new UiSelector().className("android.widget.TextView").text("sauce")')
        category_select.click()
        sleep(2)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(2)
        self.assertEqual(self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton").is_displayed(),
                         True)

    def test_product_add_with_product_name_as_blank_spaces(self):
        random_product_name = (random.choice(product_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(2)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys(random_product_name)
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(1)
        product_name_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productNameET")
        product_name_textbox.send_keys("     ")
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(1)
        category_select = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("sauce")')
        category_select.click()
        sleep(2)
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("5020")
        sleep(2)
        self.assertEqual(self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton").is_displayed(),
                         True)

    def test_product_add_with_variant(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                 'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        add_product_button.click()
        sleep(2)
        product_name = self.driver.find_element(AppiumBy.ID, 'com.dukaan.app:id/product_name_et')
        product_name.send_keys("Product with variant")
        sleep(1)
        continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(1)
        product_category_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(1)
        category_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                   'new UiSelector().className("android.widget.TextView").text("sauce")')
        category_select.click()
        select_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrpET")
        price_textbox.send_keys("5020")
        sleep(2)
        self.driver.swipe(519, 1562, 508, 957, 500)
        add_variants_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addVariants")
        add_variants_button.click()
        sleep(1)
        add_size_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/btn_add_size")
        add_size_button.click()
        sleep(1)
        size1_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/edit_text")
        size1_textbox.send_keys("L")
        size1_price_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/mrp_et")
        size1_price_textbox.send_keys("390")
        self.driver.hide_keyboard()
        sleep(1)
        add_color_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/btn_add_color")
        add_color_button.click()
        color_select = self.driver.find_element(AppiumBy.XPATH,
                                                "/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/androidx.appcompat.widget.LinearLayoutCompat/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.ScrollView/android.widget.LinearLayout/android.widget.GridView/android.widget.FrameLayout[8]/android.view.View")
        color_select.click()
        select_button1 = self.driver.find_element(AppiumBy.ID, "android:id/button1")
        select_button1.click()
        sleep(1)
        save_and_continue_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/id_btn_finish")
        save_and_continue_button.click()
        sleep(2)
        product_add_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/addUpdateProductButton")
        product_add_button.click()
        sleep(2)
        back_button = self.driver.find_element(AppiumBy.XPATH, "//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(2)
        search_icon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/search_et")
        search_textbox.send_keys("Product with variant")
        sleep(2)
        product_title = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/title_tv")
        product_title.click()
        sleep(1)
        self.driver.swipe(519, 1562, 508, 957, 500)
        navigate_to_variants = self.driver.find_element(AppiumBy.ID,"com.dukaan.app:id/addVariants")
        navigate_to_variants.click()
        sleep(10)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.EditText").text("L")')
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                        'new UiSelector().className("android.widget.TextView").text("Dodger Blue")')

    def test_product_save_as_draft(self):
        random_product_name = (random.choice(product_names))
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        products_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(2)
        product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
        product_name.send_keys(random_product_name)
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(1)
        price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrpET")
        price_textbox.send_keys("5020")
        back_button = self.driver.find_element_by_xpath("//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(1)
        save_as_draft_button = self.driver.find_element_by_id("com.dukaan.app:id/save_draft_tv")
        save_as_draft_button.click()
        sleep(3)
        add_product_button1 = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
        add_product_button1.click()
        sleep(1)
        product_name_in_details_page = self.driver.find_element_by_id("com.dukaan.app:id/productNameET")
        price_in_details_page = self.driver.find_element_by_id("com.dukaan.app:id/mrpET")
        self.assertEqual(random_product_name, product_name_in_details_page.text)
        self.assertEqual(price_textbox.text, price_in_details_page.text)
        sleep(1)
        back_button.click()
        sleep(1)
        discard_button = self.driver.find_element_by_id("com.dukaan.app:id/discard_tv")
        discard_button.click()
        sleep(2)
        add_product_button2 = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
        add_product_button2.click()
        sleep(1)
        assert self.driver.find_element_by_id("com.dukaan.app:id/product_name_et")

    def test_price_validation(self):
        self.cf = LoginPage(self.driver)
        self.cf.getStartMethod()
        self.cf.clickEmailButton()
        self.cf.enterEmailAddress()
        self.cf.clickEmailContinueButton()
        self.cf.enterPassword()
        self.cf.clickPasswordContinueButton()
        self.cf.verifyHomePage()
        products_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Products")')
        products_icon.click()
        sleep(2)
        add_product_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Add new product")')
        add_product_button.click()
        sleep(2)
        product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
        product_name.send_keys("Price validation product")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
        continue_button.click()
        sleep(2)
        product_category_button = self.driver.find_element_by_id("com.dukaan.app:id/productCategoryET")
        product_category_button.click()
        sleep(1)
        self.driver.swipe(500, 1550, 500, 250, 500)
        choose_category = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Clothing")')
        choose_category.click()
        sleep(1)
        select_button = self.driver.find_element_by_id("com.dukaan.app:id/selectButton")
        select_button.click()
        sleep(1)
        price = "1000"
        price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrpET")
        price_textbox.send_keys(price)
        add_button = self.driver.find_element_by_id("com.dukaan.app:id/addUpdateProductButton")
        add_button.click()
        sleep(3)
        back_button = self.driver.find_element_by_xpath("//android.widget.ImageButton[@content-desc='Navigate up']")
        back_button.click()
        sleep(1)
        search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
        search_textbox.send_keys("Price validation product")
        sleep(2)
        product_title = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Price validation product")')
        product_title.click()
        sleep(1)
        price_in_product_details = self.driver.find_element_by_id("com.dukaan.app:id/mrpET")
        self.assertEqual(price, price_in_product_details.text)

    # def test_add_new_product_under_category(self):
    #     self.driver.launch_app()
    #     sleep(7)
    #     products_icon = self.driver.find_element_by_id("com.dukaan.app:id/catalog_iv")
    #     products_icon.click()
    #     sleep(2)
    #     categories_select = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Categories")')
    #     categories_select.click()
    #     sleep(1)
    #     add_categories_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Add new category")')
    #     add_categories_button.click()
    #     sleep(2)
    #     category_name = "Category to add product"
    #     categories_textbox = self.driver.find_element_by_id("com.dukaan.app:id/name_et")
    #     categories_textbox.send_keys(category_name)
    #     sleep(2)
    #     create_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     create_button.click()
    #     sleep(4)
    #     search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
    #     search_icon.click()
    #     sleep(1)
    #     search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
    #     search_textbox.send_keys(category_name)
    #     sleep(2)
    #     category_select = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Category to add product")')
    #     category_select.click()
    #     sleep(1)
    #     add_new_product_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Add new product")')
    #     add_new_product_button.click()
    #     sleep(1)
    #     product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
    #     product_name.send_keys("Product under category")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     continue_button.click()
    #     sleep(2)
    #     price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     price_textbox.send_keys("11000")
    #     discounted_price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/selling_price_et")
    #     discounted_price_textbox.send_keys("9000")
    #     quantity_textbox = self.driver.find_element_by_id("com.dukaan.app:id/base_qty_et")
    #     quantity_textbox.send_keys("10")
    #     add_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     add_button.click()
    #     sleep(2)
    #     navigate_back = self.driver.find_element_by_xpath("//android.widget.ImageView[@content-desc='Back']")
    #     navigate_back.click()
    #     sleep(2)
    #     navigate_to_products_page = self.driver.find_element_by_xpath("//android.widget.LinearLayout[@content-desc='Products']/android.widget.TextView")
    #     navigate_to_products_page.click()
    #     sleep(1)
    #     search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
    #     search_icon.click()
    #     sleep(2)
    #     search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
    #     search_textbox.send_keys("Product under category")
    #     sleep(2)
    #     product_title = self.driver.find_element_by_id("com.dukaan.app:id/title_tv")
    #     product_title.click()
    #     sleep(1)
    #     category_text = self.driver.find_element_by_id("com.dukaan.app:id/product_category_et")
    #     self.assertEqual(category_name, category_text.text)
    #
    # def test_product_add_with_custom_color(self):
    #     custom_color_name = (random.choice(custom_color_codes))
    #     self.driver.launch_app()
    #     sleep(7)
    #     products_icon = self.driver.find_element_by_id("com.dukaan.app:id/catalog_iv")
    #     products_icon.click()
    #     sleep(2)
    #     add_product_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     add_product_button.click()
    #     sleep(2)
    #     product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
    #     product_name.send_keys("Product with custom color")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     continue_button.click()
    #     sleep(1)
    #     product_category_button = self.driver.find_element_by_id("com.dukaan.app:id/productCategoryET")
    #     product_category_button.click()
    #     sleep(1)
    #     category_select = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Healthcare")')
    #     category_select.click()
    #     select_button = self.driver.find_element_by_id("com.dukaan.app:id/select_btn")
    #     select_button.click()
    #     price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     price_textbox.send_keys("3000")
    #     quantity_textbox = self.driver.find_element_by_id("com.dukaan.app:id/base_qty_et")
    #     quantity_textbox.send_keys("3")
    #     sleep(2)
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     add_variants_button = self.driver.find_element_by_id("com.dukaan.app:id/go_to_variants_tv")
    #     add_variants_button.click()
    #     sleep(1)
    #     add_color_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_color")
    #     add_color_button.click()
    #     sleep(1)
    #     custom_button = self.driver.find_element_by_id("android:id/button3")
    #     custom_button.click()
    #     sleep(1)
    #     color_code_textbox = self.driver.find_element_by_id("com.dukaan.app:id/cpv_hex")
    #     color_code_textbox.send_keys(custom_color_name)
    #     select_color_button = self.driver.find_element_by_id("android:id/button1")
    #     select_color_button.click()
    #     sleep(1)
    #     color_in_variants_page = self.driver.find_element_by_id("com.dukaan.app:id/text_view")
    #     save_and_continue_button = self.driver.find_element_by_id("com.dukaan.app:id/id_btn_finish")
    #     save_and_continue_button.click()
    #     sleep(1)
    #     product_add_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     product_add_button.click()
    #     sleep(2)
    #     search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
    #     search_icon.click()
    #     sleep(1)
    #     search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
    #     search_textbox.send_keys("Product with custom color")
    #     sleep(2)
    #     product_title = self.driver.find_element_by_id("com.dukaan.app:id/title_tv")
    #     product_title.click()
    #     sleep(1)
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     navigate_to_variants = self.driver.find_element_by_id("com.dukaan.app:id/lblAddVariant")
    #     navigate_to_variants.click()
    #     sleep(2)
    #     color_in_product_detail_page = self.driver.find_element_by_id("com.dukaan.app:id/text_view")
    #     self.assertEqual(color_in_variants_page.text, color_in_product_detail_page.text)
    #

    #

    #
    # def test_add_products_with_multiple_variants(self):
    #     self.driver.launch_app()
    #     sleep(7)
    #     products_icon = self.driver.find_element_by_id("com.dukaan.app:id/catalog_iv")
    #     products_icon.click()
    #     sleep(2)
    #     add_product_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     add_product_button.click()
    #     sleep(2)
    #     product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
    #     product_name.send_keys("Product with multiple variant")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     continue_button.click()
    #     sleep(1)
    #     product_category_button = self.driver.find_element_by_id("com.dukaan.app:id/product_category_et")
    #     product_category_button.click()
    #     sleep(1)
    #     category_select = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Clothing")')
    #     category_select.click()
    #     select_button = self.driver.find_element_by_id("com.dukaan.app:id/select_btn")
    #     select_button.click()
    #     price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     price_textbox.send_keys("5000")
    #     quantity_textbox = self.driver.find_element_by_id("com.dukaan.app:id/base_qty_et")
    #     quantity_textbox.send_keys("2")
    #     sleep(2)
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     add_variants_button = self.driver.find_element_by_id("com.dukaan.app:id/go_to_variants_tv")
    #     add_variants_button.click()
    #     sleep(1)
    #     add_size_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_size")
    #     add_size_button.click()
    #     sleep(1)
    #     size1_textbox = self.driver.find_element_by_id("com.dukaan.app:id/edit_text")
    #     size1_textbox.send_keys("L")
    #     size1_price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     size1_price_textbox.send_keys("390")
    #     add_another_size_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_size")
    #     add_another_size_button.click()
    #     sleep(1)
    #     size2_textbox = self.driver.find_element_by_xpath("/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.widget.ScrollView/android.widget.RelativeLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.LinearLayout[2]/android.widget.LinearLayout[1]/android.widget.FrameLayout/android.widget.EditText")
    #     size2_textbox.send_keys("M")
    #     size2_price_textbox = self.driver.find_element_by_xpath("/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.widget.ScrollView/android.widget.RelativeLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.LinearLayout[2]/android.widget.LinearLayout[2]/android.widget.LinearLayout[1]/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.EditText")
    #     size2_price_textbox.send_keys("350")
    #     sleep(1)
    #     self.driver.hide_keyboard()
    #     sleep(1)
    #     add_color_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_color")
    #     add_color_button.click()
    #     color_select = self.driver.find_element_by_xpath(
    #         "/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/androidx.appcompat.widget.LinearLayoutCompat/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.ScrollView/android.widget.LinearLayout/android.widget.GridView/android.widget.FrameLayout[8]/android.view.View")
    #     color_select.click()
    #     select_button1 = self.driver.find_element_by_id("android:id/button1")
    #     select_button1.click()
    #     sleep(1)
    #     add_another_color_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_color")
    #     add_another_color_button.click()
    #     color2_select = self.driver.find_element_by_xpath("/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/androidx.appcompat.widget.LinearLayoutCompat/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.ScrollView/android.widget.LinearLayout/android.widget.HorizontalScrollView/android.widget.LinearLayout/android.widget.FrameLayout[1]/android.view.View")
    #     color2_select.click()
    #     select_button1.click()
    #     sleep(1)
    #     save_and_continue_button = self.driver.find_element_by_id("com.dukaan.app:id/id_btn_finish")
    #     save_and_continue_button.click()
    #     sleep(2)
    #     product_add_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     product_add_button.click()
    #     sleep(3)
    #     search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
    #     search_icon.click()
    #     sleep(1)
    #     search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
    #     search_textbox.send_keys("Product with multiple variant")
    #     sleep(2)
    #     product_title = self.driver.find_element_by_id("com.dukaan.app:id/title_tv")
    #     product_title.click()
    #     sleep(1)
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     navigate_to_variants = self.driver.find_element_by_id("com.dukaan.app:id/lblAddVariant")
    #     navigate_to_variants.click()
    #     sleep(2)
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.EditText").text("L")')
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.EditText").text("M")')
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Dodger Blue")')
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Mercury")')
    #

    #
    # def test_unit_validation(self):
    #     self.driver.launch_app()
    #     sleep(7)
    #     products_icon = self.driver.find_element_by_id("com.dukaan.app:id/catalog_iv")
    #     products_icon.click()
    #     add_product_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Add new product")')
    #     add_product_button.click()
    #     sleep(2)
    #     product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
    #     product_name.send_keys("Unit validation product")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     continue_button.click()
    #     sleep(2)
    #     product_category_button = self.driver.find_element_by_id("com.dukaan.app:id/product_category_et")
    #     product_category_button.click()
    #     sleep(1)
    #     choose_category = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Test Category")')
    #     choose_category.click()
    #     sleep(1)
    #     select_button = self.driver.find_element_by_id("com.dukaan.app:id/select_btn")
    #     select_button.click()
    #     sleep(1)
    #     price = "1000"
    #     price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     price_textbox.send_keys(price)
    #     discounted_price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/selling_price_et")
    #     discounted_price_textbox.send_keys("900")
    #     quantity = "10"
    #     quantity_textbox = self.driver.find_element_by_id("com.dukaan.app:id/base_qty_et")
    #     quantity_textbox.send_keys(quantity)
    #     unit_textbox = self.driver.find_element_by_id("com.dukaan.app:id/unit_et")
    #     unit_textbox.click()
    #     sleep(1)
    #     unit_select = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("quintal")')
    #     unit_select.click()
    #     sleep(1)
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Unit: Per 10 quintals")')
    #
    # def test_unit_validation(self):
    #     self.driver.launch_app()
    #     sleep(7)
    #     products_icon = self.driver.find_element_by_id("com.dukaan.app:id/catalog_iv")
    #     products_icon.click()
    #     add_product_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Add new product")')
    #     add_product_button.click()
    #     sleep(2)
    #     product_name = self.driver.find_element_by_id('com.dukaan.app:id/product_name_et')
    #     product_name.send_keys("Discount validation product")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     continue_button.click()
    #     sleep(2)
    #     price = "1000"
    #     price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/mrp_et")
    #     price_textbox.send_keys(price)
    #     discounted_price_textbox = self.driver.find_element_by_id("com.dukaan.app:id/selling_price_et")
    #     discounted_price_textbox.send_keys("900")
    #     sleep(1)
    #     assert self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Price: ₹900 ₹1000")')'''

    def tearDown(self):
        self.driver.quit()

    if '__main__' == __name__:
        unittest.main()
