import unittest

from appium import webdriver
import pytest
import logging

from appium.webdriver.common.appiumby import AppiumBy

logging.basicConfig(filename='dukaanandroidautomation.log', filemode='w')
logger = logging.getLogger(__name__)
from time import sleep
import random
from random import randint
from AppiumFrameWork1.pages.LoginPage import LoginPage

name = ['Rahul', 'Arjun', 'Ravi', 'Hari', 'Nikhil', 'Sachin', 'Suresh', 'Manu', 'Rishi', 'Varun', 'Prithwi', 'Ajil']


class ManageStorePage(unittest.TestCase):

    def setUp(self):
        self.driver = webdriver.Remote(command_executor="http://127.0.0.1:4723/wd/hub",
                                       desired_capabilities=
                                       {
                                           "platformName": "Android",
                                           "platformVersion": "9",
                                           "deviceName": "emulator-5554",
                                           "automationName": "uiautomator2",
                                           "app": "C:/Users/clinton/Downloads/app-prod-debug.apk",
                                           "newCommandTimeout": 600,
                                           "launchTimeout": "90000",
                                           "adbExecTimeout": "30000",
                                           "autoGrantPermissions": "true"
                                       })

    def test_marketing_designs_page(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        manage_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(3)
        marketing_designs_icon = self.driver.find_element(AppiumBy.XPATH, '(//android.widget.ImageView[@content-desc="Small Icon"])[1]')
        marketing_designs_icon.click()
        sleep(3)

        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Business Card")')
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Store Banners")')
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("WhatsApp Stories")')

    def test_whatsapp_stories(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        manage_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                               'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(3)
        marketing_designs_icon = self.driver.find_element(AppiumBy.XPATH, '(//android.widget.ImageView[@content-desc="Small Icon"])[1]')
        marketing_designs_icon.click()
        sleep(2)
        whatsapp_stories_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("WhatsApp Stories")')
        whatsapp_stories_icon.click()
        sleep(2)
        edit_text_button_whatsapp = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/edit_btn")
        edit_text_button_whatsapp.click()
        sleep(2)
        footer_text = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/id_et_footer")
        footer_text.send_keys("SHOP ONLINE FROM DUKAAN TEST FOOTER")
        sleep(2)
        save_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/id_btn_save")
        save_button.click()
        sleep(2)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text('
                                                                      '"SHOP ONLINE FROM DUKAAN TEST FOOTER")')

    def test_create_discount_coupon_as_percentage(self):
        # ensure there is already a coupon added
        coupon_code = ("PERCOUPON")
        self.cf = LoginPage(self.driver)
        self.cf.logincall()
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(1)
        discount_coupons_icon = self.driver.find_element(AppiumBy.XPATH, '(//android.widget.ImageView[@content-desc="Small Icon"])[3]')
        discount_coupons_icon.click()
        sleep(2)
        create_coupon_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/action_btn")
        create_coupon_button.click()
        sleep(1)
        select_discount_type = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                        'new UiSelector().className("android.widget.TextView").text("Percentage discount")')
        select_discount_type.click()
        sleep(2)
        coupon_code_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/coupon_code_et")
        coupon_code_textbox.send_keys(coupon_code)
        uses_per_cust_dropdown = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/user_per_cust_spinner")
        uses_per_cust_dropdown.click()
        sleep(1)
        custom_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Custom")')
        custom_select.click()
        sleep(1)
        uses_per_cust_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/user_per_cust_cstom_et")
        uses_per_cust_textbox.send_keys("50")
        percent_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/percent_discount_value_et")
        percent_textbox.send_keys("20")
        min_order_amount = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/min_order_value_et")
        min_order_amount.send_keys("300")
        max_discount_amount_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/maximum_discount_et")
        max_discount_amount_textbox.send_keys("100")
        self.driver.swipe(508, 1599, 516, 713, 400)
        sleep(1)
        coupon_functionality = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Coupon functionality")')
        coupon_functionality.click()
        sleep(1)
        show_coupon_to_customer_toggle = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/switch_show_cust")
        show_coupon_to_customer_toggle.click()
        sleep(1)
        valid_for_online_payments_toggle = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/switch_valid_online")
        valid_for_online_payments_toggle.click()
        sleep(1)
        coupon_validity = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("Coupon validity")')
        coupon_validity.click()
        sleep(1)
        start_date = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/date_from")
        start_date.click()
        sleep(1)
        month_navigation = self.driver.find_element(AppiumBy.ID, "android:id/next")
        month_navigation.click()
        sleep(1)
        start_date_selection = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.view.View").text("1")')
        start_date_selection.click()
        sleep(1)
        select_time = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/time_from")
        select_time.click()
        done_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/timeDone")
        done_button.click()
        sleep(1)
        create_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/createCouponButton")
        create_button.click()
        sleep(5)
        assert self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("PERCOUPON")')

    def test_delete_coupon(self):
        self.cf = LoginPage(self.driver)
        self.cf.logincall()

        manage_icon = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                               'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        discount_coupons_icon = self.driver.find_element(AppiumBy.XPATH,
                                                         '(//android.widget.ImageView[@content-desc="Small Icon"])[3]')
        discount_coupons_icon.click()
        sleep(2)
        create_coupon_button = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                        'new UiSelector().className("android.widget.TextView").text("Create a coupon")')
        create_coupon_button.click()
        sleep(2)
        select_discount_type = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                        'new UiSelector().className("android.widget.TextView").text("Percentage discount")')
        select_discount_type.click()
        sleep(2)
        coupon_code_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/coupon_code_et")
        coupon_code_textbox.send_keys("DELCOUPON")
        uses_per_cust_dropdown = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/user_per_cust_spinner")
        uses_per_cust_dropdown.click()
        sleep(1)
        unlimited_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                    'new UiSelector().className("android.widget.TextView").text("Unlimited")')
        unlimited_select.click()
        percent_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/percent_discount_value_et")
        percent_textbox.send_keys("12")
        min_order_amount = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/min_order_value_et")
        min_order_amount.send_keys("3000")
        max_discount_amount_textbox = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/maximum_discount_et")
        max_discount_amount_textbox.send_keys("500")
        self.driver.swipe(513, 1599, 508, 825, 400)
        sleep(1)
        coupon_functionality = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
                                                        'new UiSelector().className("android.widget.TextView").text("Coupon functionality")')
        coupon_functionality.click()
        sleep(1)
        show_coupon_to_customer_toggle = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/switch_show_cust")
        show_coupon_to_customer_toggle.click()
        sleep(1)
        create_button = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/createCouponButton")
        create_button.click()
        sleep(2)
        coupon_select = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("DELCOUPON")')
        coupon_select.click()
        sleep(1)
        self.driver.swipe(470, 760, 470, 66, 400)
        sleep(1)
        delete_coupon = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/deleteCouponTV")
        delete_coupon.click()
        sleep(1)
        confirm_delete = self.driver.find_element(AppiumBy.ID, "com.dukaan.app:id/consentActionTV")
        confirm_delete.click()
        sleep(3)
        try:
            self.assertEqual(self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().className("android.widget.TextView").text("DELCOUPON")').is_displayed(), True)

        except Exception as e:
            logger.error("Discount coupon not deleted" + str(e))
            logger.info("Discount coupon deleted successfully" + str(e))

    def test_create_discount_coupon_as_flat_discount(self):
        # ensure there is already a coupon added
        coupon_code = ("FLATDISC")
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(3)
        discount_coupons_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[3]')
        discount_coupons_icon.click()
        sleep(2)
        create_coupon_button = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Create coupon")')
        create_coupon_button.click()
        sleep(2)
        select_discount_type = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Flat discount")')
        select_discount_type.click()
        sleep(2)
        coupon_code_textbox = self.driver.find_element_by_id("com.dukaan.app:id/coupon_code_et")
        coupon_code_textbox.send_keys(coupon_code)
        uses_per_cust_dropdown = self.driver.find_element_by_id("com.dukaan.app:id/user_per_cust_spinner")
        uses_per_cust_dropdown.click()
        sleep(1)
        only_once_select = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Only once")')
        only_once_select.click()
        sleep(1)
        discount_amount_textbox = self.driver.find_element_by_id("com.dukaan.app:id/flat_discount_value_et")
        discount_amount_textbox.send_keys("50")
        min_order_amount_textbox = self.driver.find_element_by_id("com.dukaan.app:id/flat_min_order_value_et")
        min_order_amount_textbox.send_keys("500")
        sleep(2)
        create_button = self.driver.find_element_by_id("com.dukaan.app:id/createCouponButton")
        create_button.click()
        sleep(4)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("FLATDISC")')

    def test_create_discount_coupon_as_buy_x_get_y(self):
        # ensure there is already a coupon added
        coupon_code = ("BUYXGETY")
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        discount_coupons_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[3]')
        discount_coupons_icon.click()
        sleep(2)
        create_coupon_button = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Create coupon")')
        create_coupon_button.click()
        sleep(3)
        select_discount_type = self.driver.find_element_by_xpath(
            '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.view.ViewGroup[3]/android.widget.TextView[1]')
        select_discount_type.click()
        sleep(2)
        coupon_code_textbox = self.driver.find_element_by_id("com.dukaan.app:id/coupon_code_et")
        coupon_code_textbox.send_keys(coupon_code)
        uses_per_cust_dropdown = self.driver.find_element_by_id("com.dukaan.app:id/user_per_cust_spinner")
        uses_per_cust_dropdown.click()
        sleep(1)
        unlimited_select = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Unlimited")')
        unlimited_select.click()
        sleep(1)
        buy_x = self.driver.find_element_by_id("com.dukaan.app:id/editTextBuy")
        buy_x.send_keys("2")
        get_y = self.driver.find_element_by_id("com.dukaan.app:id/editTextGet")
        get_y.send_keys("1")
        coupon_apply_on = self.driver.find_element_by_id("com.dukaan.app:id/couponOptionTv")
        coupon_apply_on.click()
        sleep(1)
        all_products_select = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("All products")')
        all_products_select.click()
        sleep(1)
        create_button = self.driver.find_element_by_id("com.dukaan.app:id/createCouponButton")
        create_button.click()
        sleep(4)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("BUYXGETY")')

    def test_my_customers_valid_search(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        my_customers_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[4]')
        my_customers_icon.click()
        sleep(2)
        search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
        search_textbox.send_keys("Jayaneeth")
        sleep(2)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Jayaneeth")')

    def test_add_customer(self):
        customer_name = random.choice(name)
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        my_customers_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[4]')
        my_customers_icon.click()
        sleep(2)
        add_customer_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
        add_customer_button.click()
        sleep(1)
        text_name = self.driver.find_element_by_id("android:id/text1")
        text_name.click()
        sleep(1)
        name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/customer_name_et")
        name_textbox.clear()
        name_textbox.send_keys(customer_name)
        customer_name_text = self.driver.find_element_by_id("com.dukaan.app:id/customer_name_et").text

        def random_mobile_number(n):
            range_start = 10 ** (n - 1)
            range_end = (10 ** n) - 1
            return randint(range_start, range_end)

        # sleep(2)
        # text_name_mobile = self.driver.find_element_by_id("android:id/text1")
        # text_name_mobile.click()
        sleep(1)
        mobile_number_textbox = self.driver.find_element_by_id("com.dukaan.app:id/customer_mobile_et")
        mobile_number_textbox.clear()
        mobile_number_textbox.send_keys(random_mobile_number(10))
        sleep(1)
        customer_add_button = self.driver.find_element_by_id("com.dukaan.app:id/tv_yes")
        customer_add_button.click()
        sleep(2)
        search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
        search_textbox.send_keys(customer_name_text)
        sleep(2)
        name_in_customers_page = self.driver.find_element_by_id("com.dukaan.app:id/titleTV")
        self.assertEqual(customer_name, name_in_customers_page.text)

    def order_detail_from_customers(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        my_customers_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[4]')
        my_customers_icon.click()
        sleep(2)
        customer_details = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Jayaneeth")')
        customer_details.click()
        sleep(2)
        order_details = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Details")')
        order_details.click()
        sleep(2)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("RECEIPT")')

    def test_my_customers_invalid_search(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        my_customers_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[4]')
        my_customers_icon.click()
        sleep(2)
        search_icon = self.driver.find_element_by_id("com.dukaan.app:id/search_icon")
        search_icon.click()
        sleep(1)
        search_textbox = self.driver.find_element_by_id("com.dukaan.app:id/search_et")
        search_textbox.send_keys("rahul")
        sleep(3)
        assert self.driver.find_element_by_id("com.dukaan.app:id/no_items_tv")

    def test_create_extra_charge_percent(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        extra_charges_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[8]')
        extra_charges_icon.click()
        sleep(2)
        self.driver.swipe(500, 1550, 500, 250, 500)
        sleep(1)
        create_extra_charge_button = self.driver.find_element_by_id("com.dukaan.app:id/add_another_charge_tv")
        create_extra_charge_button.click()
        sleep(1)
        charge_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/charge_name_et")
        charge_name_textbox.send_keys("conveyance")
        charge_in_percent_textbox = self.driver.find_element_by_id("com.dukaan.app:id/percentET")
        charge_in_percent_textbox.send_keys("10")
        create_button = self.driver.find_element_by_id("com.dukaan.app:id/new_addon_save_tv")
        create_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("conveyance")')

    def test_create_extra_charge_flat_charge(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        extra_charges_icon = self.driver.find_element_by_xpath(
            '(//android.widget.ImageView[@content-desc="Small Icon"])[8]')
        extra_charges_icon.click()
        sleep(2)
        self.driver.swipe(500, 1550, 500, 250, 500)
        sleep(1)
        create_extra_charge_button = self.driver.find_element_by_id("com.dukaan.app:id/add_another_charge_tv")
        create_extra_charge_button.click()
        sleep(1)
        flat_charge_radio_button = self.driver.find_element_by_id("com.dukaan.app:id/flatPriceRB")
        flat_charge_radio_button.click()
        sleep(1)
        charge_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/charge_name_et")
        charge_name_textbox.send_keys("flat_charge")
        sleep(1)
        charge_in_rupees_textbox = self.driver.find_element_by_id("com.dukaan.app:id/flatPriceET")
        charge_in_rupees_textbox.send_keys("40")
        create_button = self.driver.find_element_by_id("com.dukaan.app:id/new_addon_save_tv")
        create_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("flat_charge")')

    # def test_delete_extra_charge(self):
    #     #ensure there is no extra charge present
    #     self.driver.launch_app()
    #     sleep(2)
    #     get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
    #     get_started_button.click()
    #     sleep(1)
    #     continue_with_email_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
    #     continue_with_email_button.click()
    #     sleep(1)
    #     email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
    #     email_address_textbox.send_keys("jayaneethck@gmail.com")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
    #     continue_button.click()
    #     sleep(3)
    #     password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
    #     password_textbox.send_keys("dukaanauto")
    #     sleep(2)
    #     enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
    #     enter_password_button.click()
    #     sleep(4)
    #     manage_icon = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Manage")')
    #     manage_icon.click()
    #     sleep(2)
    #     extra_charges_icon = self.driver.find_element_by_xpath(
    #         '(//android.widget.ImageView[@content-desc="Small Icon"])[8]')
    #     extra_charges_icon.click()
    #     sleep(2)
    #     self.driver.swipe(500, 1550, 500, 250, 500)
    #     sleep(1)
    #     create_extra_charge_button = self.driver.find_element_by_id("com.dukaan.app:id/add_another_charge_tv")
    #     create_extra_charge_button.click()
    #     sleep(2)
    #     flat_charge_radio_button = self.driver.find_element_by_id("com.dukaan.app:id/flatPriceRB")
    #     flat_charge_radio_button.click()
    #     sleep(1)
    #     charge_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/charge_name_et")
    #     charge_name_textbox.send_keys("charge to be deleted")
    #     sleep(1)
    #     charge_in_rupees_textbox = self.driver.find_element_by_id("com.dukaan.app:id/flatPriceET")
    #     charge_in_rupees_textbox.send_keys("40")
    #     create_button = self.driver.find_element_by_id("com.dukaan.app:id/new_addon_save_tv")
    #     create_button.click()
    #     sleep(2)
    #     menu_icon = self.driver.find_element_by_id("com.dukaan.app:id/menuIV")
    #     menu_icon.click()
    #     sleep(2)
    #     delete_charge_button = self.driver.find_element_by_id("com.dukaan.app:id/deleteTV")
    #     delete_charge_button.click()
    #     sleep(1)
    #     try:
    #         self.assertEqual(self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("charge to be deleted")').is_displayed(), True)
    #
    #     except Exception as e:
    #         logger.error("Extra charge not deleted" + str(e))
    #         logger.info("Extra charge deleted successfully" + str(e))

    # def test_change_default_payment_method(self):
    #     #ensure that the default payment is set to both option or online payment
    #     self.driver.launch_app()
    #     sleep(2)
    #     get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
    #     get_started_button.click()
    #     sleep(1)
    #     continue_with_email_button = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
    #     continue_with_email_button.click()
    #     sleep(1)
    #     email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
    #     email_address_textbox.send_keys("jayaneethck@gmail.com")
    #     sleep(1)
    #     continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
    #     continue_button.click()
    #     sleep(3)
    #     password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
    #     password_textbox.send_keys("dukaanauto")
    #     sleep(2)
    #     enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
    #     enter_password_button.click()
    #     sleep(4)
    #     manage_icon = self.driver.find_element_by_android_uiautomator(
    #         'new UiSelector().className("android.widget.TextView").text("Manage")')
    #     manage_icon.click()
    #     sleep(2)
    #     online_payments_icon = self.driver.find_element_by_xpath(
    #         '(//android.widget.ImageView[@content-desc="Small Icon"])[2]')
    #     online_payments_icon.click()
    #     sleep(2)
    #     default_method = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Default Method")')
    #     default_method.click()
    #     sleep(2)
    #     cod_radio_button = self.driver.find_element_by_id("com.dukaan.app:id/option_0_iv")
    #     cod_radio_button.click()
    #     sleep(1)
    #     save_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     save_button.click()
    #     sleep(4)
    #     assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Cash on Delivery")')
    #     sleep(1)
    #     default_method.click()
    #     sleep(1)
    #     both_option_radio_button = self.driver.find_element_by_id("com.dukaan.app:id/option_2_iv")
    #     both_option_radio_button.click()
    #     sleep(1)
    #     save_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     save_button.click()
    #     sleep(4)
    #     assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Both Options")')
    #     sleep(1)
    #     default_method.click()
    #     sleep(2)
    #     online_payments_radio_button = self.driver.find_element_by_id("com.dukaan.app:id/option_1_iv")
    #     online_payments_radio_button.click()
    #     sleep(1)
    #     save_button = self.driver.find_element_by_id("com.dukaan.app:id/action_btn")
    #     save_button.click()
    #     sleep(4)
    #     assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Online Payments")')

    def test_order_form_add_new_field_as_textfield(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        order_form_icon = self.driver.find_element_by_xpath('(//android.widget.ImageView[@content-desc="Small Icon"])[9]')
        order_form_icon.click()
        sleep(2)
        add_new_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_tv_add_new_field")
        add_new_field_button.click()
        sleep(2)
        field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        field_name_textbox.send_keys("text field")
        sleep(1)
        field_type = self.driver.find_element_by_id("com.dukaan.app:id/et_field_type")
        field_type.click()
        sleep(1)
        field_type_text_field = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Text field")')
        field_type_text_field.click()
        sleep(1)
        required_toggle = self.driver.find_element_by_id("com.dukaan.app:id/switch_required")
        required_toggle.click()
        sleep(1)
        add_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        add_field_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("text field *")')

    def test_order_form_add_new_field_as_email(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        order_form_icon = self.driver.find_element_by_xpath(
            '(//android.widget.ImageView[@content-desc="Small Icon"])[9]')
        order_form_icon.click()
        sleep(2)
        add_new_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_tv_add_new_field")
        add_new_field_button.click()
        sleep(2)
        field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        field_name_textbox.send_keys("email")
        sleep(1)
        field_type = self.driver.find_element_by_id("com.dukaan.app:id/et_field_type")
        field_type.click()
        sleep(1)
        field_type_email = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Email")')
        field_type_email.click()
        sleep(1)
        required_toggle = self.driver.find_element_by_id("com.dukaan.app:id/switch_required")
        required_toggle.click()
        sleep(1)
        add_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        add_field_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("email *")')

    def test_order_form_add_new_field_as_date_picker(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        order_form_icon = self.driver.find_element_by_xpath(
            '(//android.widget.ImageView[@content-desc="Small Icon"])[9]')
        order_form_icon.click()
        sleep(2)
        add_new_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_tv_add_new_field")
        add_new_field_button.click()
        sleep(2)
        field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        field_name_textbox.send_keys("date picker")
        sleep(1)
        field_type = self.driver.find_element_by_id("com.dukaan.app:id/et_field_type")
        field_type.click()
        sleep(1)
        field_type_date_picker = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Date picker")')
        field_type_date_picker.click()
        sleep(1)
        required_toggle = self.driver.find_element_by_id("com.dukaan.app:id/switch_required")
        required_toggle.click()
        sleep(1)
        add_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        add_field_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("date picker *")')

    def test_order_form_add_new_field_as_time_picker(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        order_form_icon = self.driver.find_element_by_xpath(
            '(//android.widget.ImageView[@content-desc="Small Icon"])[9]')
        order_form_icon.click()
        sleep(2)
        add_new_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_tv_add_new_field")
        add_new_field_button.click()
        sleep(2)
        field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        field_name_textbox.send_keys("time picker")
        sleep(1)
        field_type = self.driver.find_element_by_id("com.dukaan.app:id/et_field_type")
        field_type.click()
        sleep(1)
        field_type_date_picker = self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Time picker")')
        field_type_date_picker.click()
        sleep(1)
        required_toggle = self.driver.find_element_by_id("com.dukaan.app:id/switch_required")
        required_toggle.click()
        sleep(1)
        add_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        add_field_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("time picker *")')

    def test_order_form_edit_field(self):
        self.driver.launch_app()
        sleep(2)
        get_started_button = self.driver.find_element_by_id("com.dukaan.app:id/get_started")
        get_started_button.click()
        sleep(1)
        continue_with_email_button = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Continue with Email")')
        continue_with_email_button.click()
        sleep(1)
        email_address_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_input")
        email_address_textbox.send_keys("jayaneethck@gmail.com")
        sleep(1)
        continue_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        continue_button.click()
        sleep(3)
        password_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_password")
        password_textbox.send_keys("dukaanauto")
        sleep(2)
        enter_password_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_continue")
        enter_password_button.click()
        sleep(4)
        manage_icon = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Manage")')
        manage_icon.click()
        sleep(2)
        order_form_icon = self.driver.find_element_by_xpath(
            '(//android.widget.ImageView[@content-desc="Small Icon"])[9]')
        order_form_icon.click()
        sleep(2)
        add_new_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_tv_add_new_field")
        add_new_field_button.click()
        sleep(2)
        field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        field_name_textbox.send_keys("Test order form field to be edited")
        sleep(1)
        field_type = self.driver.find_element_by_id("com.dukaan.app:id/et_field_type")
        field_type.click()
        sleep(1)
        field_type_text_field = self.driver.find_element_by_android_uiautomator(
            'new UiSelector().className("android.widget.TextView").text("Text field")')
        field_type_text_field.click()
        sleep(1)
        required_toggle = self.driver.find_element_by_id("com.dukaan.app:id/switch_required")
        required_toggle.click()
        sleep(1)
        add_field_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        add_field_button.click()
        sleep(3)
        menu_icon = self.driver.find_element_by_id("com.dukaan.app:id/iv_addon_overflow_menu")
        menu_icon.click()
        sleep(1)
        edit_button = self.driver.find_element_by_id("com.dukaan.app:id/tv_menu_edit_field")
        edit_button.click()
        sleep(2)
        edit_field_name_textbox = self.driver.find_element_by_id("com.dukaan.app:id/et_field_name")
        edit_field_name_textbox.send_keys("Edited")
        sleep(2)
        update_button = self.driver.find_element_by_id("com.dukaan.app:id/btn_add_field")
        update_button.click()
        sleep(3)
        assert self.driver.find_element_by_android_uiautomator('new UiSelector().className("android.widget.TextView").text("Edited *")')

    def tearDown(self):
        self.driver.quit()


if '__main__' == __name__:
    unittest.main()
